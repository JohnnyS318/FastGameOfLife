#version 430 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

#define DATA_W 1000
#define DATA_H 1000

layout(std430 , binding=4) buffer Dat{
  int Data[DATA_W*DATA_H];
};

layout(std430, binding=5) buffer Nex{
  int Next[DATA_W*DATA_H];
};


layout( local_size_x = 20, local_size_y = 20, local_size_z = 1 ) in;

void main(){

  uint gix = gl_GlobalInvocationID.x;
  uint giy = gl_GlobalInvocationID.y;

  int sum = 0;
  for(int i = -1; i <= 1; i++){
    for(int j = -1; j <= 1; j++){
        sum += Data[((gix+i+DATA_W)% DATA_W)+((giy + j + DATA_H)% DATA_H)*DATA_W];
    }
  }

  int c = Data[gix+giy*DATA_W];
  sum -= c;

  Next[gix+giy*DATA_W] = int((c == 0 && sum == 3) || (c == 1 && (sum == 2 || sum == 3)));
}