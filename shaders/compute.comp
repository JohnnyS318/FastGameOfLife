#version 430 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout(std430 , binding=4) buffer Dat{
  int Data[1000][1000];
};

layout(std430, binding=5) buffer Nex{
  int Next[1000][1000];
};


layout( local_size_x = 20, local_size_y = 20, local_size_z = 1 ) in;

void main(){

  const int data_w = 1000;
  const int data_h = 1000;

  uint gix = gl_GlobalInvocationID.x;
  uint giy = gl_GlobalInvocationID.y;

  //printf("x %d y %d res %d \n", gix, giy, (gix+1+data_w)% data_w); 

  int sum = 0;
  for(int i = -1; i <= 1; i++){
    for(int j = -1; j <= 1; j++){
      sum = sum + Data[(gix+i+data_w)% data_w][(giy + j + data_h)% data_h];
    }
  }

  int c = Data[gix][giy];
  sum = sum - c;

  if(c == 0 && sum == 3){
    Next[gix][giy] = 1;
  }else if (c == 1 && (sum == 2 || sum == 3)){
    Next[gix][giy] = 1;
  }else {
    Next[gix][giy] = 0;
  }
}